variables:
  CONTAINER_URL: "code.ornl.gov:4567/sns-hfir-scse/sans/sans-backend/$CI_COMMIT_REF_NAME"
  TEST_SCOPE: "unit"

stages:
  - flake8
  - dockerbuild
  - test
  - web-host
  - analysis-update

flake8-feature:
  stage: flake8
  before_script:
    - sudo cp scripts/fix_runner_perms.sh /etc/cron.hourly/fix_runner_perms.sh
    - sudo chmod +x /etc/cron.hourly/fix_runner_perms.sh
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker run -v $PWD:/opt/sans-backend -t code.ornl.gov:4567/sns-hfir-scse/docker-containers/mantid-framework-nightly/master bash -c "flake8 /opt/sans-backend"
    - sudo chown -R gitlab-runner .
  tags:
    - scse-mantid-builder
  except:
    - next

flake8-next:
  stage: flake8
  before_script:
    - sudo cp scripts/fix_runner_perms.sh /etc/cron.hourly/fix_runner_perms.sh
    - sudo chmod +x /etc/cron.hourly/fix_runner_perms.sh
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker run -v $PWD:/opt/sans-backend -t code.ornl.gov:4567/sns-hfir-scse/docker-containers/mantid-framework-nightly/master bash -c "flake8 /opt/sans-backend"
    - sudo chown -R gitlab-runner .
  tags:
    - scse-mantid-builder
  only:
    - next

dockerbuild:
  stage: dockerbuild
  before_script:
    - docker system prune -f
    - docker image prune -af
    - sudo cp scripts/fix_runner_perms.sh /etc/cron.hourly/fix_runner_perms.sh
    - sudo chmod +x /etc/cron.hourly/fix_runner_perms.sh
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull code.ornl.gov:4567/sns-hfir-scse/docker-containers/mantid-framework-nightly/master
    - time docker build -t $CONTAINER_URL .
    - time docker push $CONTAINER_URL
    - sed -i "s|CONTAINER_URL|$CONTAINER_URL|" scripts/sans-backend-run.sh
    - sudo chown -R gitlab-runner .
  tags:
    - scse-mantid-builder
  artifacts:
    paths:
    - scripts/sans-backend-run.sh

docker-update-test:
  stage: test
  dependencies:
    - dockerbuild
  before_script:
    - sudo yum install -y nfs-utils
    - sudo mkdir -p /SNS
    - sudo mkdir -p /HFIR
    - sudo bash scripts/eqsans-mount.sh
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time bash -x scripts/sans-backend-run.sh -u || cat SANS_output/*err
    - sudo chown -R gitlab-runner .
  tags:
    - scse-sans-demo

docker-no-update-test:
  stage: test
  dependencies:
    - dockerbuild
  before_script:
    - sudo yum install -y nfs-utils
    - sudo mkdir -p /SNS
    - sudo mkdir -p /HFIR
    - sudo bash scripts/eqsans-mount.sh
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time bash -x scripts/sans-backend-run.sh || cat SANS_output/*err
    - sudo chown -R gitlab-runner .
  tags:
    - scse-sans-demo

docs-feature:
  stage: test
  dependencies:
    - dockerbuild
  script:
    - sudo rm -rf /tmp/sans-backend || true
    - sudo mkdir -p /tmp/sans-backend
    - sudo cp -r . /tmp/sans-backend
    - sudo chmod 777 /tmp/sans-backend
    - pushd /tmp/sans-backend
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time docker run -u 0:0 -v $PWD:/opt/sans-backend -t $CONTAINER_URL bash -c "cd /opt/sans-backend; python /opt/sans-backend/setup.py build_sphinx"
    - ls .
    - popd
  tags:
    - scse-mantid-builder
  except:
    - next
    - master

docs-next:
  stage: test
  dependencies:
    - dockerbuild
  script:
    - sudo rm -rf /tmp/sans-backend || true
    - sudo mkdir -p /tmp/sans-backend
    - sudo cp -r . /tmp/sans-backend
    - sudo chmod 777 /tmp/sans-backend
    - pushd /tmp/sans-backend
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time docker run -u 0:0 -v $PWD:/opt/sans-backend -t $CONTAINER_URL bash -c "cd /opt/sans-backend; python /opt/sans-backend/setup.py build_sphinx"
    - ls .
    - popd
  after_script:
    - cp -r /tmp/sans-backend/build/sphinx/html .
  tags:
    - scse-mantid-builder
  only:
    - next
  artifacts:
    paths:
      -  html

code-unit-test:
  stage: test
  retry: 2
  dependencies:
    - dockerbuild
  before_script:
    - sudo mkdir -p /SNS/EQSANS/shared/sans-backend/ || true
    - sudo bash scripts/eqsans-mount.sh
  script:
    - sudo rm -rf /tmp/sans-backend || true
    - sudo mkdir -p /tmp/sans-backend
    - sudo cp -r . /tmp/sans-backend
    - sudo chmod 777 /tmp/sans-backend
    - pushd /tmp/sans-backend
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time docker run -v /SNS:/SNS -v /HFIR:/HFIR -v $PWD:/opt/sans-backend -t $CONTAINER_URL bash -c "bash /opt/sans-backend/test_job.sh ${TEST_SCOPE}"
    - popd
  after_script:
    - cp -r /tmp/sans-backend/unit_test_results.xml unit_test_results.xml
  artifacts:
    paths:
      -  unit_test_results.xml
    reports:
      junit: unit_test_results.xml
  tags:
    - scse-mantid-builder

code-integration-test:
  stage: test
  retry: 2
  dependencies:
    - dockerbuild
  before_script:
    - sudo mkdir -p /SNS/EQSANS/shared/sans-backend/ || true
    - sudo bash scripts/eqsans-mount.sh
  script:
    - sudo rm -rf /tmp/sans-backend || true
    - sudo mkdir -p /tmp/sans-backend
    - sudo cp -r . /tmp/sans-backend
    - sudo chmod 777 /tmp/sans-backend
    - pushd /tmp/sans-backend
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time docker run -v /SNS:/SNS -v /HFIR:/HFIR -v $PWD:/opt/sans-backend -t $CONTAINER_URL bash -c "bash /opt/sans-backend/test_job.sh integration"
    - popd
  after_script:
    - cp -r /tmp/sans-backend/integration_test_results.xml integration_test_results.xml
  artifacts:
    paths:
      -  integration_test_results.xml
    reports:
      junit: integration_test_results.xml
  tags:
    - scse-mantid-builder

code-pylint:
  allow_failure: true
  stage: test
  dependencies:
    - dockerbuild
  before_script:
    - sudo mkdir -p /SNS/EQSANS/shared/sans-backend/ || true
    - sudo bash scripts/eqsans-mount.sh
  script:
    - sudo rm -rf /tmp/sans-backend || true
    - sudo mkdir -p /tmp/sans-backend
    - sudo cp -r . /tmp/sans-backend
    - sudo chmod 777 /tmp/sans-backend
    - pushd /tmp/sans-backend
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time docker run -v /SNS:/SNS -v /HFIR:/HFIR -v $PWD:/opt/sans-backend -t $CONTAINER_URL bash -c "bash /opt/sans-backend/scripts/pylint_job.sh"
    - popd
  tags:
    - scse-mantid-builder

script-host:
  stage: web-host
  dependencies:
    - dockerbuild
  before_script:
    - sudo yum install -y httpd
    - sudo rm -f /etc/httpd/conf.d/welcome.conf
    - sudo systemctl restart httpd
    - sudo cp scripts/fix_runner_perms.sh /etc/cron.hourly/fix_runner_perms.sh
    - sudo chmod +x /etc/cron.hourly/fix_runner_perms.sh
  script:
    - sudo mkdir -p /var/www/html/sans-backend/$CI_COMMIT_REF_NAME
    - sudo ls -la /var/www/html/
    - sudo cp -f scripts/sans-backend-run.sh /var/www/html/sans-backend/$CI_COMMIT_REF_NAME/
    - sudo chmod -R 755 /var/www/html/
    - curl http://localhost/sans-backend/$CI_COMMIT_REF_NAME/sans-backend-run.sh
    - sudo chown -R gitlab-runner .
  tags:
    - scse-mantid-demo

docs-next-host:
  stage: web-host
  dependencies:
    - docs-next
  before_script:
    - sudo yum install -y httpd
    - sudo rm -f /etc/httpd/conf.d/welcome.conf
    - sudo systemctl restart httpd
    - sudo cp scripts/fix_runner_perms.sh /etc/cron.hourly/fix_runner_perms.sh
    - sudo chmod +x /etc/cron.hourly/fix_runner_perms.sh
  script:
    - sudo mkdir -p /var/www/html/
    - sudo ls -la /var/www/html/
    - sudo cp -rf html/* /var/www/html/
    - sudo chmod -R 755 /var/www/html/
    - curl http://localhost/index.html
    - sudo chown -R gitlab-runner .
  tags:
    - docs
  only:
    - next

scse-web-next-dev1:
  stage: web-host
  dependencies:
    - docs-next
  script:
    - sudo rm -rf /tmp/scse-web/docs/drt/sans || true
    - sudo mkdir -p /tmp/scse-web/docs/drt/sans
    - sudo rsync -r html/* /tmp/scse-web/docs/drt/sans
  tags:
    - scse-web-dev1
  only:
    - next

scse-web-next1:
  stage: web-host
  dependencies:
    - docs-next
  script:
    - sudo rm -rf /tmp/scse-web/docs/drt/sans || true
    - sudo mkdir -p /tmp/scse-web/docs/drt/sans
    - sudo rsync -r html/* /tmp/scse-web/docs/drt/sans
  tags:
    - scse-web1
  only:
    - next

scse-web-next2:
  stage: web-host
  dependencies:
    - docs-next
  script:
    - sudo rm -rf /tmp/scse-web/docs/drt/sans || true
    - sudo mkdir -p /tmp/scse-web/docs/drt/sans
    - sudo rsync -r html/* /tmp/scse-web/docs/drt/sans
  tags:
    - scse-web2
  only:
    - next

analysis-update:
  stage: analysis-update
  before_script:
    - sudo yum install -y nfs-utils
    - sudo mkdir -p /SNS/software
    - grep -qs '/SNS/software' /proc/mounts || sudo mount -t nfs -o "nfsvers=3,tcp,noatime,rsize=32768,wsize=32768" 128.219.164.43:/volumes/datapool/sfw-rhel7-prod /SNS/software
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - time docker pull $CONTAINER_URL
    - time docker run -v /SNS/software/miniconda2:/SNS/software/miniconda2 -u 0:0 $CONTAINER_URL bash -c "bash /opt/sans-backend/scripts/analysis-update-user.sh $CI_COMMIT_REF_NAME"
    - sudo chown -R gitlab-runner .
  tags:
    - scse-mantid-builder
  only:
    - next
    - master
    - qa
