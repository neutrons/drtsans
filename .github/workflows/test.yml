name: test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ['v*']

jobs:
  tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge
          use-mamba: true
          environment-file: environment.yml
      - name: Install additional dependencies
        run: |
          echo "installing additional dependencies if cannot be installed from conda"
      - name: Test preparation
        run: |
          python -m pip install -e .
          versioningit -vw
          git lfs pull
          git submodule update --init --recursive
      - name: Run unit tests
        run: |
          echo "running unit tests"
          python -m pytest -m "not mount_eqsans" -vv --dist loadscope -n 2 --cov=src --cov-report=xml:unit_test_coverage.xml --cov-report=term --junitxml=unit_test_results.xml tests/unit/
      - name: Run integration tests
        run: |
          echo "running integration tests"
          python -m pytest -m "not mount_eqsans" -vv --dist loadscope -n 2 --cov=src --cov-report=xml:integration_test_coverage.xml --cov-report=term --junitxml=integration_test_results.xml tests/integration/
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        if:
          github.actor != 'dependabot[bot]'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: |
            unit_test_coverage.xml
            integration_test_coverage.xml
      - name: Build the docs
        run: |
          cd docs && make html

  package:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 100
          fetch-tags: true
          ref: ${{ github.ref }}
      - name: Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          channels: mantid/label/main,conda-forge,defaults
          python-version: '3.10'
          miniconda-version: latest
          mamba-version: "*"
          environment-file: environment.yml
          lfs: true
          submodules: recursive
      - name: Build Wheel
        run: |
          python -m build --wheel --no-isolation
          check-wheel-contents dist/drtsans*.tar.bz2
      - name: Build Conda package
        run: |
          cd conda.recipe
          VERSION=$(versioningit ../) conda mambabuild --output-folder . . -c mantid
          conda verify noarch/drtsans*.tar.bz2
