[project]
name = "drtsans"
description = "Data Reduction Toolkit SANS reduction"
dynamic = ["version"]
# author = TODO
# keywords = TODO
readme = "README.rst"
requires-python = ">=3.8"
#requires = ["python_version >=3.8"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Natural Language :: English",
    "Operating System :: Linux",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License"
]
dependencies = [
"docutils",
"ipywidgets",
"jsonschema>=3.0.2",
"lmfit",
# mantid is not here b/c it doesn't exist in pypi
"matplotlib",  # is this necessary
"mpld3",
"numexpr",
"pandas",
"sortedcontainers",
"tinydb"
]

[project.license]
file = "LICENSE"

[project.urls]
Documentation = "https://drtsans.readthedocs.io/"
Source = "https://code.ornl.gov/sns-hfir-scse/sans/sans-backend/"
BugTracker = "https://code.ornl.gov/sns-hfir-scse/sans/sans-backend/-/issues"

[build-system]
requires = ["setuptools >= 42", "toml", "wheel", "versioningit"]
build-backend = "setuptools.build_meta"

[tool.versioningit.vcs]
method = "git"
default-tag = "1.0.0"

[tool.versioningit.next-version]
method = "minor"

[tool.versioningit.format]
distance = "{next_version}.dev{distance}"
dirty = "{version}+d{build_date:%Y%m%d}"
distance-dirty = "{next_version}.dev{distance}+d{build_date:%Y%m%d%H%M}"

[tool.versioningit.write]
file = "drtsans/_version.py"

[tool.black]
line-length = 119

[tool.ruff]
line-length = 119
# https://beta.ruff.rs/docs/rules/
# suggestions: BLE blind exceptions, I sorts imports
# Full pylint PL = PLC, PLE, PLR (~500 issues), PLW. Enable most
select = ["A", "ARG", "E", "F", "PLC", "PLE", "PLW"]
ignore = ["A002", "A003", # shadowing python built-ins
          "ARG001", "ARG002", # unused argument
          "E402", # import not at the top of the file
	  "E712", # comparison to false
          "E741", # ambiguous variable name
]

[tool.pytest.ini_options]
pythonpath = [".", "scripts"]
testpaths = ["tests"]
python_files = ["test*.py"]
norecursedirs = [".git", "tmp*", "_tmp*", "__pycache__", "*dataset*", "*data_set*"]
markers = [
    "long_execution_time: mark test as having a long execution time",
    "requires_large_memory: mark test as requiring a large amount of RAM memory",
    "datarepo: mark a test as using drtsans-data repository",
    "mount_eqsans: mark a test as using /SNS/EQSANS/shared/sans-backend/data/ data mount"
    ]
