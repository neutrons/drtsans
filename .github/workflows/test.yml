name: test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ['v*']

jobs:
  linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge
          use-mamba: true
          environment-file: environment.yml
      - name: Install additional dependencies
        run: |
          echo "installing additional dependencies if cannot be installed from conda"
      - name: Test preparation
        run: |
          python -m pip install -e .
          versioningit -vw
          git lfs pull
          git submodule update --init --recursive
      - name: Run unit tests
        run: |
          echo "running unit tests"
          python -m pytest -m "not mount_eqsans" -vv --dist loadscope -n 2 --cov=src --cov-report=xml:unit_test_coverage.xml --cov-report=term --junitxml=unit_test_results.xml tests/unit/
      - name: Run integration tests
        run: |
          echo "running integration tests"
          python -m pytest -m "not mount_eqsans" -vv --dist loadscope -n 2 --cov=src --cov-report=xml:integration_test_coverage.xml --cov-report=term --junitxml=integration_test_results.xml tests/integration/
      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v5
        if:
          github.actor != 'dependabot[bot]'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: |
            unit_test_coverage.xml
            integration_test_coverage.xml
      - name: Build the docs
        run: |
          cd docs && make html
      - name: Build conda package
        run: |
          # test that the conda package builds
          cd conda.recipe
          echo "versioningit $(versioningit ../)"
          # conda channels could have been defined in the conda-incubator, but you can copy/paste the lines
          # below to build the conda package in your local machine
          CHANNELS="--channel mantid-ornl/label/rc --channel conda-forge"
          VERSION=$(versioningit ../) conda mambabuild $CHANNELS --output-folder . .
          conda verify noarch/drtsans*.tar.bz2
