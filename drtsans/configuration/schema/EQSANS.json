{
  "$schema": "http://json-schema.org/draft-07/schema#",

  "type": "object",
  "properties": {
    "schemaStamp": {"$ref": "common.json#/schemaStamp"},

    "instrumentName": {
      "$ref": "common.json#/instrumentName",
      "default": "EQSANS"
    },

    "iptsNumber":        {"$ref":  "common.json#/iptsNumber"},
    "dataDirectories":   {"$ref":  "common.json#/dataDirectories"},
    "sample": {
      "type": "object",
      "properties" : {
        "runNumber": {
          "$ref": "common.json#/definitions/runNumberTypes",
          "description": "The run number(s) for the sample. The sample filename will be EQSANS_{runNumber}.nxs.h5",
          "examples": ["12345", 12345]
        },
        "thickness": {
          "anyOf": [{"type": "string", "minLength": 1}, {"type": "number", "exclusiveMinimum": 0}],
          "default": 1.0, "description": "The sample thickness in cm"
        },
        "transmission": {
          "type": "object",
          "properties": {
            "runNumber": {
              "$ref": "common.json#/definitions/runNumberOptionalTypes",
              "description": "The run number(s) for the transmission sample. The filename will be EQSANS_{runNumber}.nxs.h5",
              "examples": ["12345", 12345]
            },
            "value": {"$ref": "common.json#/definitions/transmissionValueTypes"}
          },
          "maxProperties": 2,
          "required": ["runNumber", "value"],
          "description": "The transmission for the sample, run number or value (0 < value <=1). Can be empty",
          "examples": ["0.9", 1.0]
        }
      },
      "maxProperties": 3,
      "required": ["runNumber", "thickness", "transmission"]
    },
    "background":        {"$ref":  "common.json#/background"},
    "emptyTransmission": {"$ref":  "common.json#/emptyTransmission"},
    "beamCenter":        {"$ref":  "common.json#/beamCenter"},
    "outputFileName":    {"$ref":  "common.json#/outputFileName"},

    "configuration": {
      "type": "object",
      "properties": {

        "outputDir": {"$ref":  "common.json#/configuration/outputDir"},

        "useTimeSlice":         {"$ref":  "common.json#/configuration/useTimeSlice", "default": false},
        "timeSliceInterval": {"$ref":  "common.json#/configuration/timeSliceInterval"},

        "useLogSlice":         {"$ref":  "common.json#/configuration/useLogSlice", "default": false},
        "logSliceName":     {"$ref":  "common.json#/configuration/logSliceName"},
        "logSliceInterval": {"$ref":  "common.json#/configuration/logSliceInterval"},

        "useTOFcuts": {"type": "boolean", "description": "Flag to use user defined time of flight range",
                       "default": true, "examples": [true, false],
                       "useEntry": ["#configuration/cutTOFmin", "#configuration/cutTOFmax"]},
        "cutTOFmin": {"$ref":  "common.json#/definitions/safeStringNonNegativeFloat", "default": 500.0,
                      "description": "User defined time of flight range minimum"},
        "cutTOFmax": {"$ref":  "common.json#/definitions/safeStringPositiveFloat", "default": 1500.0,
                      "description": "User defined time of flight range maximum"},

        "wavelengthStep": {"$ref":  "common.json#/definitions/safeStringPositiveFloat", "default": 0.1,
                           "description": "Wavelength step. The loaded data files are transformed into wavelength in angstroms, then binned with this step"},
        "wavelengthStepType": {"type": "string", "enum": ["constant Delta lambda",  "constant Delta lambda/lambda"],
                               "default": "constant Delta lambda",
                               "examples": ["constant Delta lambda",  "constant Delta lambda/lambda"]},

        "sampleOffset":           {"$ref":  "common.json#/configuration/sampleOffset"},
        "useDetectorOffset":      {"$ref":  "common.json#/configuration/useDetectorOffset", "default": true,
                                   "useEntry": "#configuration/detectorOffset"},
        "detectorOffset":         {"$ref":  "common.json#/configuration/detectorOffset", "default": 0},
        "sampleApertureSize":     {"$ref":  "common.json#/configuration/sampleApertureSize"},
        "sourceApertureDiameter": {"$ref":  "common.json#/configuration/sourceApertureDiameter"},
        "DBScalingBeamRadius":    {"$ref":  "common.json#/configuration/DBScalingBeamRadius"},

        "usePixelCalibration": {"$ref":  "common.json#/configuration/usePixelCalibration", "default": true},

        "maskFileName":     {"$ref":  "common.json#/configuration/maskFileName"},
        "useDefaultMask":   {"$ref":  "common.json#/configuration/useDefaultMask", "default": true},
        "defaultMask":      {"$ref":  "common.json#/configuration/defaultMask"},
        "useMaskBackTubes": {"$ref":  "common.json#/configuration/useMaskBackTubes", "default": false},

        "darkFileName":    {"$ref":  "common.json#/configuration/darkFileName"},
        "normalization": {
          "anyOf": [{"type": "string", "enum": ["Monitor", "Total charge", "Time"]},
                    {"type": "null"}],
          "description": "Normalization type. Allowed values 'Total charge', 'Time', 'Monitor'",
          "fluxfiletof": {"Monitor": "#configuratin/fluxMonitorRatioFile",
                          "Total Charge": "#configuration/beamFluxFileName"},
          "examples":  ["Monitor", "Total charge", "Time"]
        },
        "fluxMonitorRatioFile": {
          "type": ["string", "null"],
          "datasource": "file",
          "description": "Path to the monitor flux ratio file (used in normalization by monitor)",
          "examples": ["/path/to/file/fluxMonitorRatio.dat"]
        },
        "beamFluxFileName": {
          "type": ["string", "null"],
          "datasource": "file",
          "description": "Path to the flux file (used in normalization by proton charge)",
          "examples":  ["/path/to/file/beamFluxfile.dat"]
        },
        "sensitivityFileName":        {"$ref":  "common.json#/configuration/sensitivityFileName"},
        "useSolidAngleCorrection":    {"$ref":  "common.json#/configuration/useSolidAngleCorrection", "default": true},
        "useThetaDepTransCorrection": {"$ref":  "common.json#/configuration/useThetaDepTransCorrection", "default": true},
        "mmRadiusForTransmission": {
          "$ref": "common.json#/definitions/safeStringPositiveFloatNotNone",
          "description": "Integration radius (in mm) to be used for transmission calculation",
          "default": 25
        },
        "absoluteScaleMethod":        {"$ref":  "common.json#/configuration/absoluteScaleMethod"},
        "StandardAbsoluteScale": {"$ref":  "common.json#/configuration/StandardAbsoluteScale", "default": 1.0},

        "numQxQyBins":          {"$ref":  "common.json#/configuration/numQxQyBins"},
        "1DQbinType":           {"$ref":  "common.json#/configuration/1DQbinType", "default": "scalar"},
        "QbinType": {
          "$ref":  "common.json#/configuration/QbinType",
          "default": "log",
          "evaluateCondition": "('{this}' == 'linear' and {#configuration/numQBins} is not None) or ('{this}' == 'log' and (({#configuration/numQBins} is None) ^ ({#configuration/LogQBinsPerDecade} is None)))"
        },
        "numQBins":             {"$ref":  "common.json#/configuration/numQBins"},
        "LogQBinsPerDecade":    {"$ref":  "common.json#/configuration/LogQBinsPerDecade"},
        "useLogQBinsDecadeCenter": {"$ref":  "common.json#/configuration/useLogQBinsDecadeCenter", "default": false},
        "useLogQBinsEvenDecade":   {"$ref":  "common.json#/configuration/useLogQBinsEvenDecade", "default": false},

        "WedgeMinAngles":            {"$ref":  "common.json#/configuration/WedgeMinAngles"},
        "WedgeMaxAngles":            {"$ref":  "common.json#/configuration/WedgeMaxAngles"},
        "autoWedgeQmin":             {"$ref":  "common.json#/configuration/autoWedgeQmin", "default":  0.003},
        "autoWedgeQmax":             {"$ref":  "common.json#/configuration/autoWedgeQmax", "default":  0.04},
        "autoWedgeQdelta":           {"$ref":  "common.json#/configuration/autoWedgeQdelta", "default":  0.01},
        "autoWedgeAzimuthalDelta":  {"$ref":  "common.json#/configuration/autoWedgeAzimuthalDelta", "default": 1.0},
        "autoWedgePeakWidth":        {"$ref":  "common.json#/configuration/autoWedgePeakWidth", "default":  0.25},
        "autoWedgeBackgroundWidth":  {"$ref":  "common.json#/configuration/autoWedgeBackgroundWidth", "default": 1.5},
        "autoWedgeSignalToNoiseMin": {"$ref":  "common.json#/configuration/autoWedgeSignalToNoiseMin", "default": 2.0},
        "AnnularAngleBin":           {"$ref":  "common.json#/configuration/AnnularAngleBin", "default": 1.0},

        "Qmin":              {"$ref":  "common.json#/configuration/Qmin"},
        "Qmax":              {"$ref":  "common.json#/configuration/Qmax"},
        "useErrorWeighting": {"$ref":  "common.json#/configuration/useErrorWeighting", "default": false},
        "smearingPixelSizeX": {"$ref":  "common.json#/configuration/smearingPixelSizeX"},
        "smearingPixelSizeY": {"$ref":  "common.json#/configuration/smearingPixelSizeY"},
        "useSubpixels":      {"$ref":  "common.json#/configuration/useSubpixels", "default": false,
                              "useEntry": ["#configuration/subpixelsX", "#configuration/subpixelsY"]},
        "subpixelsX":        {"$ref":  "common.json#/configuration/subpixelsX"},
        "subpixelsY":        {"$ref":  "common.json#/configuration/subpixelsY"},

        "useSliceIDxAsSuffix": {"type": "boolean", "default": false,
                                "description": "If True, suffix is the slice index. If False, suffix is a composite (time, custom log values)",
                                "examples": [true, false]}
      },
      "maxProperties": 58,
      "required": ["outputDir", "useTimeSlice", "timeSliceInterval", "useLogSlice", "logSliceName",
        "logSliceInterval", "sampleOffset", "useDetectorOffset", "detectorOffset",
        "sampleApertureSize", "sourceApertureDiameter", "DBScalingBeamRadius","usePixelCalibration",
        "maskFileName", "useDefaultMask", "defaultMask", "useMaskBackTubes", "darkFileName",
        "sensitivityFileName", "useSolidAngleCorrection", "useThetaDepTransCorrection",
        "mmRadiusForTransmission", "absoluteScaleMethod", "StandardAbsoluteScale", "numQxQyBins", "1DQbinType",
        "QbinType", "numQBins", "LogQBinsPerDecade", "useLogQBinsDecadeCenter", "useLogQBinsEvenDecade",
        "WedgeMinAngles", "WedgeMaxAngles", "autoWedgeQmin", "autoWedgeQmax", "autoWedgeQdelta",
        "autoWedgeAzimuthalDelta", "autoWedgePeakWidth", "autoWedgeBackgroundWidth", "autoWedgeSignalToNoiseMin",
        "AnnularAngleBin", "Qmin", "Qmax", "useErrorWeighting", "smearingPixelSizeX",
        "smearingPixelSizeY", "useSubpixels", "subpixelsX", "subpixelsY", "useSliceIDxAsSuffix",
        "useTOFcuts", "cutTOFmin", "cutTOFmax", "wavelengthStep", "wavelengthStepType", "normalization",
        "fluxMonitorRatioFile", "beamFluxFileName"]
    }
  },
  "maxProperties": 10,
  "required": ["schemaStamp", "instrumentName", "iptsNumber", "dataDirectories", "sample", "background",
    "emptyTransmission", "beamCenter", "outputFileName", "configuration"]
}
